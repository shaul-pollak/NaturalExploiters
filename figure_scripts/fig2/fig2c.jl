###
# this script reads in CFU counts from mono- and co-cultures, and plots the
# final yield of co-cultured strains relative to their mono-culture yields
# 
# the output of this analysis is presented in figure 2c
###

using DataFrames, OdsIO, Statistics, Gadfly, Compose
import Cairo, Fontconfig

# read data
d = ods_read("$(pwd())/data/coculture.ods";sheetPos=2,retType="DataFrame");

# calculate monoculture growth factors
mono = d[d.type .== "mono",:];
strains = ["1A01","6D03","6B07","C3R19","I2M19"];
mono_growth_factors = DataFrame(strain=repeat(strains,inner=2),
                                rep=repeat([1,2],
                                           outer=length(strains)),
                                factor=0.0);
for strn in strains
    tm = mono[mono.strain1 .== strn,:];
    @views @. mono_growth_factors[mono_growth_factors.strain == strn,3] = 
        tm.cfu[tm.time == 72] / tm.cfu[tm.time == 0];
end




# calculate coculture growth factors
strains = ["1A01","6D03","6B07","C3R19","I2M19"];
s1 = strains[1];
s2 = strains[3];
co = DataFrame(strain = "",
               with = "",
               factor = Float64[],
               fmax=Float64[],
               fmin=Float64[]);
for s1 in strains 
    s10 = @. d.cfu[(d.time == 0) * (d.focal == s1)];
    for s2 in strains 
        s20 = @. d.cfu[(d.time == 0) * (d.focal == s2)];
        d12 = @. d[(d.strain1 == s1) & (d.strain2 == s2) & (d.time != 0),:];
        d21 = @. d[(d.strain1 == s2) & (d.strain2 == s1) & (d.time != 0),:];
        ((nrow(d12)==0) & (nrow(d21)==0)) && continue
        ((nrow(d21)>0) & (nrow(d12)==0)) && (d12 = d21);
        f1 = d12.cfu[d12.focal .== s1] / s10
        f1m = mean(f1);
        f1sd = std(f1);
        df = DataFrame(
            strain=s1,
            with=s2,
            factor=f1m,
            fmax=f1m+(f1sd),
            fmin=max(f1m-f1sd,.01)
        );
        co = vcat(co,df);
    end
end

d2 = zeros(0,2)
for deg in ["1A01", "6D03"]
    mono_deg = co[(co.strain .== deg) .& (co.with .== deg),"factor"];
    for expl in ["6B07","C3R19","I2M19"]
        mono_exp = co[(co.strain .== expl) .& (co.with .== expl),"factor"];
        co_deg = co[(co.strain .== deg) .& (co.with .== expl),"factor"] / mono_deg; 
        co_exp = co[(co.strain .== expl) .& (co.with .== deg),"factor"] / mono_exp;
        d2 = vcat(d2,transpose([co_deg[1];co_exp[1]]));
    end
end

# plot
p1 = plot(x=d2[:,1],y=d2[:,2],Geom.point,size=[3pt]);
push!(p1,Scale.x_log10(minvalue=.01,maxvalue=100));
push!(p1,Scale.y_log10(minvalue=.01,maxvalue=100));
p1 |> PDF("fig2c.pdf",2.7inch,2inch);
